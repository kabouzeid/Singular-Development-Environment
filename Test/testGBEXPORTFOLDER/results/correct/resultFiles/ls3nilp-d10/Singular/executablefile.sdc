LIB "freegb.lib";
ring r = 0,(x,y,z,t),dp;
int upToDeg = 10;
def R = makeLetterplaceRing(upToDeg);
setring(R);
ideal Id = 3*x*y*x*x-y*x*x*x-3*x*x*y*x+x*x*x*y,
2*x*y*x*y-x*x*y*y-2*y*x*y*x+y*y*x*x,
2*x*y*x*z-y*x*x*z-x*x*y*z-2*z*x*y*x+z*y*x*x+z*x*x*y,
2*x*y*x*t-y*x*x*t-x*x*y*t-2*t*x*y*x+t*y*x*x+t*x*x*y,
2*x*y*x*y-x*x*y*y-2*y*x*y*x+y*y*x*x,
x*y*y*y-3*y*x*y*y+3*y*y*x*y-y*y*y*x,
x*y*y*z-2*y*x*y*z+y*y*x*z-z*x*y*y+2*z*y*x*y-z*y*y*x,
x*y*y*t-2*y*x*y*t+y*y*x*t-t*x*y*y+2*t*y*x*y-t*y*y*x,
x*y*z*x-y*x*z*x-z*x*y*x+z*y*x*x-x*x*y*z+x*y*x*z+x*z*x*y-x*z*y*x,
x*y*z*y-y*x*z*y-z*x*y*y+z*y*x*y-y*x*y*z+y*y*x*z+y*z*x*y-y*z*y*x,
x*y*z*z-y*x*z*z-2*z*x*y*z+2*z*y*x*z+z*z*x*y-z*z*y*x,
x*y*z*t-y*x*z*t-z*x*y*t+z*y*x*t-t*x*y*z+t*y*x*z+t*z*x*y-t*z*y*x,
x*y*t*x-y*x*t*x-t*x*y*x+t*y*x*x-x*x*y*t+x*y*x*t+x*t*x*y-x*t*y*x,
x*y*t*y-y*x*t*y-t*x*y*y+t*y*x*y-y*x*y*t+y*y*x*t+y*t*x*y-y*t*y*x,
x*y*t*z-y*x*t*z-t*x*y*z+t*y*x*z-z*x*y*t+z*y*x*t+z*t*x*y-z*t*y*x,
x*y*t*t-y*x*t*t-2*t*x*y*t+2*t*y*x*t+t*t*x*y-t*t*y*x,
3*x*z*x*x-z*x*x*x-3*x*x*z*x+x*x*x*z,
2*x*z*x*y-z*x*x*y-x*x*z*y-2*y*x*z*x+y*z*x*x+y*x*x*z,
2*x*z*x*z-x*x*z*z-2*z*x*z*x+z*z*x*x,
2*x*z*x*t-z*x*x*t-x*x*z*t-2*t*x*z*x+t*z*x*x+t*x*x*z,
x*z*y*x-z*x*y*x-y*x*z*x+y*z*x*x-x*x*z*y+x*z*x*y+x*y*x*z-x*y*z*x,
x*z*y*y-z*x*y*y-2*y*x*z*y+2*y*z*x*y+y*y*x*z-y*y*z*x,
x*z*y*z-z*x*y*z-y*x*z*z+y*z*x*z-z*x*z*y+z*z*x*y+z*y*x*z-z*y*z*x,
x*z*y*t-z*x*y*t-y*x*z*t+y*z*x*t-t*x*z*y+t*z*x*y+t*y*x*z-t*y*z*x,
2*x*z*x*z-x*x*z*z-2*z*x*z*x+z*z*x*x,
x*z*z*y-2*z*x*z*y+z*z*x*y-y*x*z*z+2*y*z*x*z-y*z*z*x,
x*z*z*z-3*z*x*z*z+3*z*z*x*z-z*z*z*x,
x*z*z*t-2*z*x*z*t+z*z*x*t-t*x*z*z+2*t*z*x*z-t*z*z*x,
x*z*t*x-z*x*t*x-t*x*z*x+t*z*x*x-x*x*z*t+x*z*x*t+x*t*x*z-x*t*z*x,
x*z*t*y-z*x*t*y-t*x*z*y+t*z*x*y-y*x*z*t+y*z*x*t+y*t*x*z-y*t*z*x,
x*z*t*z-z*x*t*z-t*x*z*z+t*z*x*z-z*x*z*t+z*z*x*t+z*t*x*z-z*t*z*x,
x*z*t*t-z*x*t*t-2*t*x*z*t+2*t*z*x*t+t*t*x*z-t*t*z*x,
3*x*t*x*x-t*x*x*x-3*x*x*t*x+x*x*x*t,
2*x*t*x*y-t*x*x*y-x*x*t*y-2*y*x*t*x+y*t*x*x+y*x*x*t,
2*x*t*x*z-t*x*x*z-x*x*t*z-2*z*x*t*x+z*t*x*x+z*x*x*t,
2*x*t*x*t-x*x*t*t-2*t*x*t*x+t*t*x*x,
x*t*y*x-t*x*y*x-y*x*t*x+y*t*x*x-x*x*t*y+x*t*x*y+x*y*x*t-x*y*t*x,
x*t*y*y-t*x*y*y-2*y*x*t*y+2*y*t*x*y+y*y*x*t-y*y*t*x,
x*t*y*z-t*x*y*z-y*x*t*z+y*t*x*z-z*x*t*y+z*t*x*y+z*y*x*t-z*y*t*x,
x*t*y*t-t*x*y*t-y*x*t*t+y*t*x*t-t*x*t*y+t*t*x*y+t*y*x*t-t*y*t*x,
x*t*z*x-t*x*z*x-z*x*t*x+z*t*x*x-x*x*t*z+x*t*x*z+x*z*x*t-x*z*t*x,
x*t*z*y-t*x*z*y-z*x*t*y+z*t*x*y-y*x*t*z+y*t*x*z+y*z*x*t-y*z*t*x,
x*t*z*z-t*x*z*z-2*z*x*t*z+2*z*t*x*z+z*z*x*t-z*z*t*x,
x*t*z*t-t*x*z*t-z*x*t*t+z*t*x*t-t*x*t*z+t*t*x*z+t*z*x*t-t*z*t*x,
2*x*t*x*t-x*x*t*t-2*t*x*t*x+t*t*x*x,
x*t*t*y-2*t*x*t*y+t*t*x*y-y*x*t*t+2*y*t*x*t-y*t*t*x,
x*t*t*z-2*t*x*t*z+t*t*x*z-z*x*t*t+2*z*t*x*t-z*t*t*x,
x*t*t*t-3*t*x*t*t+3*t*t*x*t-t*t*t*x,
y*x*x*x-3*x*y*x*x+3*x*x*y*x-x*x*x*y,
-2*x*y*x*y+x*x*y*y-y*y*x*x+2*y*x*y*x,
y*x*x*z-2*x*y*x*z+x*x*y*z-z*y*x*x+2*z*x*y*x-z*x*x*y,
y*x*x*t-2*x*y*x*t+x*x*y*t-t*y*x*x+2*t*x*y*x-t*x*x*y,
-2*x*y*x*y+x*x*y*y-y*y*x*x+2*y*x*y*x,
3*y*x*y*y-x*y*y*y-3*y*y*x*y+y*y*y*x,
2*y*x*y*z-x*y*y*z-y*y*x*z-2*z*y*x*y+z*x*y*y+z*y*y*x,
2*y*x*y*t-x*y*y*t-y*y*x*t-2*t*y*x*y+t*x*y*y+t*y*y*x,
y*x*z*x-x*y*z*x-z*y*x*x+z*x*y*x-x*y*x*z+x*x*y*z+x*z*y*x-x*z*x*y,
y*x*z*y-x*y*z*y-z*y*x*y+z*x*y*y-y*y*x*z+y*x*y*z+y*z*y*x-y*z*x*y,
y*x*z*z-x*y*z*z-2*z*y*x*z+2*z*x*y*z+z*z*y*x-z*z*x*y,
y*x*z*t-x*y*z*t-z*y*x*t+z*x*y*t-t*y*x*z+t*x*y*z+t*z*y*x-t*z*x*y,
y*x*t*x-x*y*t*x-t*y*x*x+t*x*y*x-x*y*x*t+x*x*y*t+x*t*y*x-x*t*x*y,
y*x*t*y-x*y*t*y-t*y*x*y+t*x*y*y-y*y*x*t+y*x*y*t+y*t*y*x-y*t*x*y,
y*x*t*z-x*y*t*z-t*y*x*z+t*x*y*z-z*y*x*t+z*x*y*t+z*t*y*x-z*t*x*y,
y*x*t*t-x*y*t*t-2*t*y*x*t+2*t*x*y*t+t*t*y*x-t*t*x*y,
y*z*x*x-z*y*x*x-2*x*y*z*x+2*x*z*y*x+x*x*y*z-x*x*z*y,
y*z*x*y-z*y*x*y-x*y*z*y+x*z*y*y-y*y*z*x+y*z*y*x+y*x*y*z-y*x*z*y,
y*z*x*z-z*y*x*z-x*y*z*z+x*z*y*z-z*y*z*x+z*z*y*x+z*x*y*z-z*x*z*y,
y*z*x*t-z*y*x*t-x*y*z*t+x*z*y*t-t*y*z*x+t*z*y*x+t*x*y*z-t*x*z*y,
2*y*z*y*x-z*y*y*x-y*y*z*x-2*x*y*z*y+x*z*y*y+x*y*y*z,
3*y*z*y*y-z*y*y*y-3*y*y*z*y+y*y*y*z,
2*y*z*y*z-y*y*z*z-2*z*y*z*y+z*z*y*y,
2*y*z*y*t-z*y*y*t-y*y*z*t-2*t*y*z*y+t*z*y*y+t*y*y*z,
y*z*z*x-2*z*y*z*x+z*z*y*x-x*y*z*z+2*x*z*y*z-x*z*z*y,
2*y*z*y*z-y*y*z*z-2*z*y*z*y+z*z*y*y,
y*z*z*z-3*z*y*z*z+3*z*z*y*z-z*z*z*y,
y*z*z*t-2*z*y*z*t+z*z*y*t-t*y*z*z+2*t*z*y*z-t*z*z*y,
y*z*t*x-z*y*t*x-t*y*z*x+t*z*y*x-x*y*z*t+x*z*y*t+x*t*y*z-x*t*z*y,
y*z*t*y-z*y*t*y-t*y*z*y+t*z*y*y-y*y*z*t+y*z*y*t+y*t*y*z-y*t*z*y,
y*z*t*z-z*y*t*z-t*y*z*z+t*z*y*z-z*y*z*t+z*z*y*t+z*t*y*z-z*t*z*y,
y*z*t*t-z*y*t*t-2*t*y*z*t+2*t*z*y*t+t*t*y*z-t*t*z*y,
y*t*x*x-t*y*x*x-2*x*y*t*x+2*x*t*y*x+x*x*y*t-x*x*t*y,
y*t*x*y-t*y*x*y-x*y*t*y+x*t*y*y-y*y*t*x+y*t*y*x+y*x*y*t-y*x*t*y,
y*t*x*z-t*y*x*z-x*y*t*z+x*t*y*z-z*y*t*x+z*t*y*x+z*x*y*t-z*x*t*y,
y*t*x*t-t*y*x*t-x*y*t*t+x*t*y*t-t*y*t*x+t*t*y*x+t*x*y*t-t*x*t*y,
2*y*t*y*x-t*y*y*x-y*y*t*x-2*x*y*t*y+x*t*y*y+x*y*y*t,
3*y*t*y*y-t*y*y*y-3*y*y*t*y+y*y*y*t,
2*y*t*y*z-t*y*y*z-y*y*t*z-2*z*y*t*y+z*t*y*y+z*y*y*t,
2*y*t*y*t-y*y*t*t-2*t*y*t*y+t*t*y*y,
y*t*z*x-t*y*z*x-z*y*t*x+z*t*y*x-x*y*t*z+x*t*y*z+x*z*y*t-x*z*t*y,
y*t*z*y-t*y*z*y-z*y*t*y+z*t*y*y-y*y*t*z+y*t*y*z+y*z*y*t-y*z*t*y,
y*t*z*z-t*y*z*z-2*z*y*t*z+2*z*t*y*z+z*z*y*t-z*z*t*y,
y*t*z*t-t*y*z*t-z*y*t*t+z*t*y*t-t*y*t*z+t*t*y*z+t*z*y*t-t*z*t*y,
y*t*t*x-2*t*y*t*x+t*t*y*x-x*y*t*t+2*x*t*y*t-x*t*t*y,
2*y*t*y*t-y*y*t*t-2*t*y*t*y+t*t*y*y,
y*t*t*z-2*t*y*t*z+t*t*y*z-z*y*t*t+2*z*t*y*t-z*t*t*y,
y*t*t*t-3*t*y*t*t+3*t*t*y*t-t*t*t*y,
z*x*x*x-3*x*z*x*x+3*x*x*z*x-x*x*x*z,
z*x*x*y-2*x*z*x*y+x*x*z*y-y*z*x*x+2*y*x*z*x-y*x*x*z,
-2*x*z*x*z+x*x*z*z-z*z*x*x+2*z*x*z*x,
z*x*x*t-2*x*z*x*t+x*x*z*t-t*z*x*x+2*t*x*z*x-t*x*x*z,
z*x*y*x-x*z*y*x-y*z*x*x+y*x*z*x-x*z*x*y+x*x*z*y+x*y*z*x-x*y*x*z,
z*x*y*y-x*z*y*y-2*y*z*x*y+2*y*x*z*y+y*y*z*x-y*y*x*z,
z*x*y*z-x*z*y*z-y*z*x*z+y*x*z*z-z*z*x*y+z*x*z*y+z*y*z*x-z*y*x*z,
z*x*y*t-x*z*y*t-y*z*x*t+y*x*z*t-t*z*x*y+t*x*z*y+t*y*z*x-t*y*x*z,
-2*x*z*x*z+x*x*z*z-z*z*x*x+2*z*x*z*x,
2*z*x*z*y-x*z*z*y-z*z*x*y-2*y*z*x*z+y*x*z*z+y*z*z*x,
3*z*x*z*z-x*z*z*z-3*z*z*x*z+z*z*z*x,
2*z*x*z*t-x*z*z*t-z*z*x*t-2*t*z*x*z+t*x*z*z+t*z*z*x,
z*x*t*x-x*z*t*x-t*z*x*x+t*x*z*x-x*z*x*t+x*x*z*t+x*t*z*x-x*t*x*z,
z*x*t*y-x*z*t*y-t*z*x*y+t*x*z*y-y*z*x*t+y*x*z*t+y*t*z*x-y*t*x*z,
z*x*t*z-x*z*t*z-t*z*x*z+t*x*z*z-z*z*x*t+z*x*z*t+z*t*z*x-z*t*x*z,
z*x*t*t-x*z*t*t-2*t*z*x*t+2*t*x*z*t+t*t*z*x-t*t*x*z,
z*y*x*x-y*z*x*x-2*x*z*y*x+2*x*y*z*x+x*x*z*y-x*x*y*z,
z*y*x*y-y*z*x*y-x*z*y*y+x*y*z*y-y*z*y*x+y*y*z*x+y*x*z*y-y*x*y*z,
z*y*x*z-y*z*x*z-x*z*y*z+x*y*z*z-z*z*y*x+z*y*z*x+z*x*z*y-z*x*y*z,
z*y*x*t-y*z*x*t-x*z*y*t+x*y*z*t-t*z*y*x+t*y*z*x+t*x*z*y-t*x*y*z,
z*y*y*x-2*y*z*y*x+y*y*z*x-x*z*y*y+2*x*y*z*y-x*y*y*z,
z*y*y*y-3*y*z*y*y+3*y*y*z*y-y*y*y*z,
-2*y*z*y*z+y*y*z*z-z*z*y*y+2*z*y*z*y,
z*y*y*t-2*y*z*y*t+y*y*z*t-t*z*y*y+2*t*y*z*y-t*y*y*z,
2*z*y*z*x-y*z*z*x-z*z*y*x-2*x*z*y*z+x*y*z*z+x*z*z*y,
-2*y*z*y*z+y*y*z*z-z*z*y*y+2*z*y*z*y,
3*z*y*z*z-y*z*z*z-3*z*z*y*z+z*z*z*y,
2*z*y*z*t-y*z*z*t-z*z*y*t-2*t*z*y*z+t*y*z*z+t*z*z*y,
z*y*t*x-y*z*t*x-t*z*y*x+t*y*z*x-x*z*y*t+x*y*z*t+x*t*z*y-x*t*y*z,
z*y*t*y-y*z*t*y-t*z*y*y+t*y*z*y-y*z*y*t+y*y*z*t+y*t*z*y-y*t*y*z,
z*y*t*z-y*z*t*z-t*z*y*z+t*y*z*z-z*z*y*t+z*y*z*t+z*t*z*y-z*t*y*z,
z*y*t*t-y*z*t*t-2*t*z*y*t+2*t*y*z*t+t*t*z*y-t*t*y*z,
z*t*x*x-t*z*x*x-2*x*z*t*x+2*x*t*z*x+x*x*z*t-x*x*t*z,
z*t*x*y-t*z*x*y-x*z*t*y+x*t*z*y-y*z*t*x+y*t*z*x+y*x*z*t-y*x*t*z,
z*t*x*z-t*z*x*z-x*z*t*z+x*t*z*z-z*z*t*x+z*t*z*x+z*x*z*t-z*x*t*z,
z*t*x*t-t*z*x*t-x*z*t*t+x*t*z*t-t*z*t*x+t*t*z*x+t*x*z*t-t*x*t*z,
z*t*y*x-t*z*y*x-y*z*t*x+y*t*z*x-x*z*t*y+x*t*z*y+x*y*z*t-x*y*t*z,
z*t*y*y-t*z*y*y-2*y*z*t*y+2*y*t*z*y+y*y*z*t-y*y*t*z,
z*t*y*z-t*z*y*z-y*z*t*z+y*t*z*z-z*z*t*y+z*t*z*y+z*y*z*t-z*y*t*z,
z*t*y*t-t*z*y*t-y*z*t*t+y*t*z*t-t*z*t*y+t*t*z*y+t*y*z*t-t*y*t*z,
2*z*t*z*x-t*z*z*x-z*z*t*x-2*x*z*t*z+x*t*z*z+x*z*z*t,
2*z*t*z*y-t*z*z*y-z*z*t*y-2*y*z*t*z+y*t*z*z+y*z*z*t,
3*z*t*z*z-t*z*z*z-3*z*z*t*z+z*z*z*t,
2*z*t*z*t-z*z*t*t-2*t*z*t*z+t*t*z*z,
z*t*t*x-2*t*z*t*x+t*t*z*x-x*z*t*t+2*x*t*z*t-x*t*t*z,
z*t*t*y-2*t*z*t*y+t*t*z*y-y*z*t*t+2*y*t*z*t-y*t*t*z,
2*z*t*z*t-z*z*t*t-2*t*z*t*z+t*t*z*z,
z*t*t*t-3*t*z*t*t+3*t*t*z*t-t*t*t*z,
t*x*x*x-3*x*t*x*x+3*x*x*t*x-x*x*x*t,
t*x*x*y-2*x*t*x*y+x*x*t*y-y*t*x*x+2*y*x*t*x-y*x*x*t,
t*x*x*z-2*x*t*x*z+x*x*t*z-z*t*x*x+2*z*x*t*x-z*x*x*t,
-2*x*t*x*t+x*x*t*t-t*t*x*x+2*t*x*t*x,
t*x*y*x-x*t*y*x-y*t*x*x+y*x*t*x-x*t*x*y+x*x*t*y+x*y*t*x-x*y*x*t,
t*x*y*y-x*t*y*y-2*y*t*x*y+2*y*x*t*y+y*y*t*x-y*y*x*t,
t*x*y*z-x*t*y*z-y*t*x*z+y*x*t*z-z*t*x*y+z*x*t*y+z*y*t*x-z*y*x*t,
t*x*y*t-x*t*y*t-y*t*x*t+y*x*t*t-t*t*x*y+t*x*t*y+t*y*t*x-t*y*x*t,
t*x*z*x-x*t*z*x-z*t*x*x+z*x*t*x-x*t*x*z+x*x*t*z+x*z*t*x-x*z*x*t,
t*x*z*y-x*t*z*y-z*t*x*y+z*x*t*y-y*t*x*z+y*x*t*z+y*z*t*x-y*z*x*t,
t*x*z*z-x*t*z*z-2*z*t*x*z+2*z*x*t*z+z*z*t*x-z*z*x*t,
t*x*z*t-x*t*z*t-z*t*x*t+z*x*t*t-t*t*x*z+t*x*t*z+t*z*t*x-t*z*x*t,
-2*x*t*x*t+x*x*t*t-t*t*x*x+2*t*x*t*x,
2*t*x*t*y-x*t*t*y-t*t*x*y-2*y*t*x*t+y*x*t*t+y*t*t*x,
2*t*x*t*z-x*t*t*z-t*t*x*z-2*z*t*x*t+z*x*t*t+z*t*t*x,
3*t*x*t*t-x*t*t*t-3*t*t*x*t+t*t*t*x,
t*y*x*x-y*t*x*x-2*x*t*y*x+2*x*y*t*x+x*x*t*y-x*x*y*t,
t*y*x*y-y*t*x*y-x*t*y*y+x*y*t*y-y*t*y*x+y*y*t*x+y*x*t*y-y*x*y*t,
t*y*x*z-y*t*x*z-x*t*y*z+x*y*t*z-z*t*y*x+z*y*t*x+z*x*t*y-z*x*y*t,
t*y*x*t-y*t*x*t-x*t*y*t+x*y*t*t-t*t*y*x+t*y*t*x+t*x*t*y-t*x*y*t,
t*y*y*x-2*y*t*y*x+y*y*t*x-x*t*y*y+2*x*y*t*y-x*y*y*t,
t*y*y*y-3*y*t*y*y+3*y*y*t*y-y*y*y*t,
t*y*y*z-2*y*t*y*z+y*y*t*z-z*t*y*y+2*z*y*t*y-z*y*y*t,
-2*y*t*y*t+y*y*t*t-t*t*y*y+2*t*y*t*y,
t*y*z*x-y*t*z*x-z*t*y*x+z*y*t*x-x*t*y*z+x*y*t*z+x*z*t*y-x*z*y*t,
t*y*z*y-y*t*z*y-z*t*y*y+z*y*t*y-y*t*y*z+y*y*t*z+y*z*t*y-y*z*y*t,
t*y*z*z-y*t*z*z-2*z*t*y*z+2*z*y*t*z+z*z*t*y-z*z*y*t,
t*y*z*t-y*t*z*t-z*t*y*t+z*y*t*t-t*t*y*z+t*y*t*z+t*z*t*y-t*z*y*t,
2*t*y*t*x-y*t*t*x-t*t*y*x-2*x*t*y*t+x*y*t*t+x*t*t*y,
-2*y*t*y*t+y*y*t*t-t*t*y*y+2*t*y*t*y,
2*t*y*t*z-y*t*t*z-t*t*y*z-2*z*t*y*t+z*y*t*t+z*t*t*y,
3*t*y*t*t-y*t*t*t-3*t*t*y*t+t*t*t*y,
t*z*x*x-z*t*x*x-2*x*t*z*x+2*x*z*t*x+x*x*t*z-x*x*z*t,
t*z*x*y-z*t*x*y-x*t*z*y+x*z*t*y-y*t*z*x+y*z*t*x+y*x*t*z-y*x*z*t,
t*z*x*z-z*t*x*z-x*t*z*z+x*z*t*z-z*t*z*x+z*z*t*x+z*x*t*z-z*x*z*t,
t*z*x*t-z*t*x*t-x*t*z*t+x*z*t*t-t*t*z*x+t*z*t*x+t*x*t*z-t*x*z*t,
t*z*y*x-z*t*y*x-y*t*z*x+y*z*t*x-x*t*z*y+x*z*t*y+x*y*t*z-x*y*z*t,
t*z*y*y-z*t*y*y-2*y*t*z*y+2*y*z*t*y+y*y*t*z-y*y*z*t,
t*z*y*z-z*t*y*z-y*t*z*z+y*z*t*z-z*t*z*y+z*z*t*y+z*y*t*z-z*y*z*t,
t*z*y*t-z*t*y*t-y*t*z*t+y*z*t*t-t*t*z*y+t*z*t*y+t*y*t*z-t*y*z*t,
t*z*z*x-2*z*t*z*x+z*z*t*x-x*t*z*z+2*x*z*t*z-x*z*z*t,
t*z*z*y-2*z*t*z*y+z*z*t*y-y*t*z*z+2*y*z*t*z-y*z*z*t,
t*z*z*z-3*z*t*z*z+3*z*z*t*z-z*z*z*t,
-2*z*t*z*t+z*z*t*t-t*t*z*z+2*t*z*t*z,
2*t*z*t*x-z*t*t*x-t*t*z*x-2*x*t*z*t+x*z*t*t+x*t*t*z,
2*t*z*t*y-z*t*t*y-t*t*z*y-2*y*t*z*t+y*z*t*t+y*t*t*z,
-2*z*t*z*t+z*z*t*t-t*t*z*z+2*t*z*t*z,
3*t*z*t*t-z*t*t*t-3*t*t*z*t+t*t*t*z;
option(prot);
option(redTail);
option(redSB);
ideal IdSTD = std(Id);
print("=====Solution Begin=====");
print (IdSTD, "%s");
print (varstr(r), "%s");
print (upToDeg, "%s");
print (Id, "%s");
print("=====Solution End=====");$;